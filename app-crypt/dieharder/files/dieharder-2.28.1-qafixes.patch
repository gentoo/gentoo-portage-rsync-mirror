--- libdieharder/static_get_bits.c	2008-09-08 08:37:18.000000000 -0400
+++ libdieharder/static_get_bits.c.new	2010-12-21 09:39:02.000000000 -0500
@@ -44,7 +44,7 @@
  }
  if(nbits > 32){
    fprintf(stderr,"Warning!  dieharder cannot yet work with\b");
-   fprintf(stderr,"           %u > 32 bit chunks.  Exiting!\n\n");
+   fprintf(stderr,"           %u > 32 bit chunks.  Exiting!\n\n", nbits);
    exit(0);
  }
 
--- libdieharder/bits.c	2008-09-08 08:37:18.000000000 -0400
+++ libdieharder/bits.c.new	2010-12-21 09:45:51.000000000 -0500
@@ -944,7 +944,7 @@
     */
    MYDEBUG(D_BITS) {
      printf("bu = %d bl = %d\n",bu,bl);
-     printf("  init %2d: |");
+     printf("  init %2d: |",bleft);
      dumpbits(&bits_rand[0],bu);
      printf("|");
      dumpbits(&bits_rand[1],bu);
--- libdieharder/marsaglia_tsang_gcd.c	2008-09-08 08:37:19.000000000 -0400
+++ libdieharder/marsaglia_tsang_gcd.c.new	2010-12-21 09:47:40.000000000 -0500
@@ -289,7 +289,7 @@
  Vtest_destroy(&vtest_u);
 
  if(verbose == D_USER_TEMPLATE || verbose == D_ALL){
-   printf("# user_marsaglia_tsang_gcd(): ks_pvalue_k[%u] = %10.5f  ks_pvalue_w[%u] = %10.5f\n",kspi,ks_pvalue[kspi],ks_pvalue2[kspi]);
+   printf("# user_marsaglia_tsang_gcd(): ks_pvalue_k[%u] = %10.5f  ks_pvalue_w[%u] = %10.5f\n",kspi,ks_pvalue[kspi],kspi,ks_pvalue2[kspi]);
  }
 
  kspi++;
