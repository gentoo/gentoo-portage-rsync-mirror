diff -aurN a/galera/SConscript b/galera/SConscript
--- a/galera/SConscript	2013-03-11 02:44:50.000000000 -0400
+++ b/galera/SConscript	2013-05-13 13:13:20.851827437 -0400
@@ -1,2 +1,2 @@
 
-SConscript(['src/SConscript', 'tests/SConscript'])
+SConscript(['src/SConscript'])
diff -aurN a/galerautils/SConscript b/galerautils/SConscript
--- a/galerautils/SConscript	2013-03-11 02:44:50.000000000 -0400
+++ b/galerautils/SConscript	2013-05-13 13:15:37.010071765 -0400
@@ -1,3 +1,3 @@
 # SConscript for building galerautils
 
-SConscript(Split('''src/SConscript tests/SConscript'''))
+SConscript(Split('''src/SConscript'''))
diff -aurN a/gcache/SConscript b/gcache/SConscript
--- a/gcache/SConscript	2013-03-11 02:44:50.000000000 -0400
+++ b/gcache/SConscript	2013-05-13 13:15:55.179837389 -0400
@@ -1,3 +1,3 @@
 # SConscript for building galerautils
 
-SConscript(Split('''src/SConscript tests/SConscript'''))
+SConscript(Split('''src/SConscript'''))
diff -aurN a/gcomm/SConscript b/gcomm/SConscript
--- a/gcomm/SConscript	2013-03-11 02:44:50.000000000 -0400
+++ b/gcomm/SConscript	2013-05-13 13:16:08.979659369 -0400
@@ -1,3 +1,3 @@
 # SCons build script for building gcomm
 
-SConscript(Split('''src/SConscript test/SConscript'''))
+SConscript(Split('''src/SConscript'''))
diff -aurN a/gcs/src/SConscript b/gcs/src/SConscript
--- a/gcs/src/SConscript	2013-03-11 02:44:50.000000000 -0400
+++ b/gcs/src/SConscript	2013-05-13 13:12:53.122184848 -0400
@@ -46,8 +46,6 @@
                      source = 'gcs_test.c',
                      LINK = libgcs_env['CXX'])
 
-SConscript('unit_tests/SConscript')
-
 #
 env.Append(LIBGALERA_OBJS = libgcs_env.SharedObject(libgcs_sources))
 
diff -aurN a/SConstruct b/SConstruct
--- a/SConstruct	2013-03-11 02:44:50.000000000 -0400
+++ b/SConstruct	2013-05-13 13:11:03.493597370 -0400
@@ -305,20 +305,6 @@
 # Clone base from default environment
 check_env = env.Clone()
 
-conf = Configure(check_env)
-
-# Check header and library
-
-if not conf.CheckHeader('check.h'):
-    print 'Error: check header file not found or not usable'
-    Exit(1)
-
-if not conf.CheckLib('check'):
-    print 'Error: check library not found or not usable'
-    Exit(1)
-
-conf.Finish()
-
 # Note: Don't do this, glibc does not like static linking
 # Link unit tests statically
 # check_env.Append(LINKFLAGS = ' -static')
@@ -328,11 +314,7 @@
 #
 
 def builder_unit_test(target, source, env):
-    app = str(source[0].abspath)
-    if os.spawnl(os.P_WAIT, app, app)==0:
-        open(str(target[0]),'w').write("PASSED\n")
-    else:
-        return 1
+	print("Disabled\n")
 # Create a builder for tests
 bld = Builder(action = builder_unit_test)
 check_env.Append(BUILDERS = {'Test' :  bld})
