diff --git a/plugins/IMs/jianpin/dict/char2db.cpp b/plugins/IMs/jianpin/dict/char2db.cpp
index d881f20..e4ddbab 100644
--- a/plugins/IMs/jianpin/dict/char2db.cpp
+++ b/plugins/IMs/jianpin/dict/char2db.cpp
@@ -74,11 +74,7 @@ void build_freq_tab(char * filename)
 {
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	f.open(filename, ios_base::in);
-#else
-	f.open(filename, "r");
-#endif
 	istream in(&f);
 
 	char cbuf[10];
@@ -154,11 +150,7 @@ int main(int argc, char * argv[])
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	f.open(argv[1], ios_base::in);
-#else
-	f.open(argv[1], "r");
-#endif
 	istream in(&f);
 
 	char mark;
diff --git a/plugins/IMs/jianpin/dict/word2db.cpp b/plugins/IMs/jianpin/dict/word2db.cpp
index 806f6c4..5baa630 100644
--- a/plugins/IMs/jianpin/dict/word2db.cpp
+++ b/plugins/IMs/jianpin/dict/word2db.cpp
@@ -83,11 +83,7 @@ int main(int argc, char * argv[])
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	f.open(argv[1], ios_base::in);
-#else
-	f.open(argv[1], "r");
-#endif
 	istream in(&f);
 
 	char mark;
diff --git a/plugins/IMs/table/dict/word2db.cpp b/plugins/IMs/table/dict/word2db.cpp
index 17d0dcf..275ee61 100644
--- a/plugins/IMs/table/dict/word2db.cpp
+++ b/plugins/IMs/table/dict/word2db.cpp
@@ -90,11 +90,7 @@ int main(int argc, char * argv[])
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	f.open(argv[1], ios_base::in);
-#else
-	f.open(argv[1], "r");
-#endif
 	istream in(&f);
 
 	char mark;
diff --git a/plugins/IMs/wubi/dict/word2db.cpp b/plugins/IMs/wubi/dict/word2db.cpp
index 0dbc7e4..e191aa8 100644
--- a/plugins/IMs/wubi/dict/word2db.cpp
+++ b/plugins/IMs/wubi/dict/word2db.cpp
@@ -81,11 +81,7 @@ int main(int argc, char * argv[])
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	f.open(argv[1], ios_base::in);
-#else
-	f.open(argv[1], "r");
-#endif
 	istream in(&f);
 
 	char mark;
diff --git a/xsim/conf.cpp b/xsim/conf.cpp
index a073bb2..a2bffb0 100644
--- a/xsim/conf.cpp
+++ b/xsim/conf.cpp
@@ -133,11 +133,7 @@ int TConf::init()
         filebuf f;
 
 	char dummy[MAX_PATH_LEN + 1];
-#ifdef _CPP_BITS_IOSBASE_H
 	if (!f.open(config_path.tombs(dummy, MAX_PATH_LEN), ios_base::in)){
-#else
-	if (!f.open(config_path.tombs(dummy, MAX_PATH_LEN), "r")){
-#endif
 		cerr << "XSIM: failed opening config file" << endl;
 		return 1;
 		}
@@ -340,11 +336,7 @@ void TConf::save_config(const wchar_t * configname, vector<TWstring> & name, vec
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	if (f.open(path.tombs(dummy, MAX_PATH_LEN), ios_base::out)){
-#else
-	if (f.open(path.tombs(dummy, MAX_PATH_LEN), "w")){
-#endif
 		ostream out(&f);
 		for (size_t i = 0; i < name.size(); i++){
 			out << name[i].tombs(dummy, MAX_PATH_LEN) << '\t';
@@ -372,11 +364,7 @@ int TConf::load_config(const wchar_t * configname, vector<TWstring> & name, vect
 
         filebuf f;
 
-#ifdef _CPP_BITS_IOSBASE_H
 	if (f.open(path.tombs(dummy, MAX_PATH_LEN), ios_base::in)){
-#else
-	if (f.open(path.tombs(dummy, MAX_PATH_LEN), "r")){
-#endif
 		istream in(&f);
 		char n[MAX_PATH_LEN + 1];
 		char v[MAX_PATH_LEN + 1];
