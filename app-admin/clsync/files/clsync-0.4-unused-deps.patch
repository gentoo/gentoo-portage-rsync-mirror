Adapted commit 756ae28750b514473ae235218d466dc6fa960c30
Author: Dmitry Yu Okunev <dyokunev@ut.mephi.ru>
Date:   Thu Jan 29 15:17:39 2015 +0300

    [configure.ac] Removed dependency on libseccomp; renamed "--with-libseccomp" -> "--enable-seccomp", "--with-capabilities" -> "--enable-capabilities"

--- clsync-0.4/configure.ac.orig	2015-02-11 01:52:54.104682884 +0300
+++ clsync-0.4/configure.ac	2015-02-11 01:58:07.397580398 +0300
@@ -145,6 +145,51 @@
 )
 AS_IF([test $paranoid -eq 2], [CPPFLAGS="${CPPFLAGS} -DVERYPARANOID"])
 
+dnl searching for seccomp
+AC_ARG_ENABLE(seccomp,
+	AS_HELP_STRING(--enable-seccomp,
+		[Enable seccomp support be able to forbid extra syscalls; values: no, check, yes; default: check]),
+	,
+	[enable_seccomp=check]
+)
+
+case "$enable_seccomp" in
+	yes)
+		AC_CHECK_TYPES([struct seccomp_data], [HAVE_SECCOMP=1], [AC_MSG_FAILURE([Cannot find valid linux/seccomp.h])], [[#include <linux/seccomp.h>]])
+		;;
+	check)
+		AC_CHECK_TYPES([struct seccomp_data], [HAVE_SECCOMP=1], ,                                                      [[#include <linux/seccomp.h>]])
+		;;
+esac
+
+dnl capabilities check
+AC_ARG_ENABLE(capabilities,
+	AS_HELP_STRING(--enable-capabilities,
+		[Enable linux capabilities support; values: no, check, yes; default: check]),
+	,
+	[enable_capabilities=check]
+)
+
+case "$enable_capabilities" in
+	yes)
+		AC_CHECK_FUNC([capset],
+			[
+				AC_CHECK_HEADER(sys/capability.h, [HAVE_CAPABILITIES=2], [AC_MSG_FAILURE([Cannot find sys/capability.h])])
+			],
+			[
+				AC_MSG_FAILURE([There is no capabilities support on this system])
+			]
+		)
+		;;
+	check)
+		AC_CHECK_FUNC([capset],
+			[
+				AC_CHECK_HEADER(sys/capability.h, [HAVE_CAPABILITIES=2])
+			]
+		)
+		;;
+esac
+
 # Checks for programs.
 AC_PROG_CC_C99
 AC_PROG_INSTALL
@@ -201,34 +246,6 @@
 		;;
 esac
 
-dnl capabilities check
-AC_ARG_WITH(capabilities,
-	AS_HELP_STRING(--with-capabilities,
-		[Enable linux capabilities support; values: no, check, yes; default: check]),
-	[],
-	[with_capabilities=check]
-)
-
-case "$with_capabilities" in
-	yes)
-		AC_CHECK_FUNC([capset],
-			[
-				AC_CHECK_HEADER(sys/capability.h, [HAVE_CAPABILITIES=2], [AC_MSG_FAILURE([Cannot find sys/capability.h])])
-			],
-			[
-				AC_MSG_FAILURE([There is no capabilities support on this system])
-			]
-		)
-		;;
-	check)
-		AC_CHECK_FUNC([capset],
-			[
-				AC_CHECK_HEADER(sys/capability.h, [HAVE_CAPABILITIES=2])
-			]
-		)
-		;;
-esac
-
 dnl tre check
 
 #AC_ARG_WITH(tre,
@@ -433,31 +450,6 @@
 
 AS_IF([test "$HAVE_INOTIFY" != ""], [AC_CHECK_FUNC([inotify_init1], [], [INOTIFY_OLD=1])])
 
-dnl searching for seccomp
-AC_ARG_WITH(libseccomp,
-	AS_HELP_STRING(--with-libseccomp,
-		[Enable seccomp support be able to forbid extra syscalls; values: no, check, yes; default: check]),
-	[],
-	[with_libseccomp=check]
-)
-
-case "$with_libseccomp" in
-	yes)
-		AC_CHECK_TYPES([scmp_filter_ctx],                   [],               [AC_MSG_FAILURE([Cannot find valid seccomp.h])],       [[#include <seccomp.h>]])
-		AC_CHECK_DECLS([seccomp_syscall_resolve_name_arch], [],               [AC_MSG_FAILURE([Cannot find valid seccomp.h])],       [[#include <seccomp.h>]])
-		AC_CHECK_TYPES([struct seccomp_data],               [HAVE_SECCOMP=1], [AC_MSG_FAILURE([Cannot find valid linux/seccomp.h])], [[#include <linux/seccomp.h>]])
-		;;
-	check)
-		AC_CHECK_TYPES([scmp_filter_ctx], [
-			AC_CHECK_DECLS([seccomp_syscall_resolve_name_arch], [
-				AC_CHECK_TYPES([struct seccomp_data], [HAVE_SECCOMP=1], [], [[#include <linux/seccomp.h>]])
-			], [], [[#include <seccomp.h>]])
-		], [], [[#include <seccomp.h>]])
-		;;
-esac
-AS_IF([test "$HAVE_CAPABILITIES" != ""], [
-])
-
 AM_CONDITIONAL([HAVE_KQUEUE],       [test "x$HAVE_KQUEUE"       != "x"])
 AM_CONDITIONAL([HAVE_INOTIFY],      [test "x$HAVE_INOTIFY"      != "x"])
 AM_CONDITIONAL([INOTIFY_OLD],       [test "x$INOTIFY_OLD"       != "x"])
diff --git a/privileged.c b/privileged.c
index 668a536..0e773cc 100644
--- a/privileged.c
+++ b/privileged.c
@@ -59,7 +59,7 @@
 #include "privileged.h"
 
 #ifdef SECCOMP_SUPPORT
-# include <seccomp.h>			// __NR_*
+# include <syscall.h>			// __NR_*
 # include <sys/prctl.h>			// prctl()
 # include <linux/filter.h>		// struct sock_filter
 # include <linux/seccomp.h>		// SECCOMP_RET_*
