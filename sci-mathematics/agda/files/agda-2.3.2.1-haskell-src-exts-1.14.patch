--- Agda-2.3.2.1-orig/src/full/Agda/Compiler/MAlonzo/Compiler.hs	2013-06-05 02:19:33.000000000 +1000
+++ Agda-2.3.2.1/src/full/Agda/Compiler/MAlonzo/Compiler.hs	2013-09-13 14:41:50.525225325 +1000
@@ -228,7 +228,11 @@
         (a, _) <- conArityAndPars c
         Just (HsDefn _ hsc) <- compiledHaskell . defCompiledRep <$> getConstInfo c
         let pat = HS.PApp (HS.UnQual $ HS.Ident hsc) $ genericReplicate a HS.PWildCard
+#if MIN_VERSION_haskell_src_exts(1,14,0)
+        return $ HS.Alt dummy pat (HS.UnGuardedAlt $ HS.Tuple HS.Boxed []) (HS.BDecls [])
+#else
         return $ HS.Alt dummy pat (HS.UnGuardedAlt $ HS.Tuple []) (HS.BDecls [])
+#endif
   cs <- mapM makeClause cs
   let rhs = case cs of
               [] -> fakeExp "()" -- There is no empty case statement in Haskell
@@ -469,11 +473,19 @@
   ]
   where
     parse = HS.parseWithMode
+#if MIN_VERSION_haskell_src_exts(1,14,0)
+              HS.defaultParseMode{HS.extensions = L.map HS.EnableExtension [explicitForAll]}
+#else
               HS.defaultParseMode{HS.extensions = [explicitForAll]}
+#endif
     ok (HS.ParseOk d)   = d
     ok HS.ParseFailed{} = __IMPOSSIBLE__
 
+#if MIN_VERSION_haskell_src_exts(1,14,0)
+explicitForAll :: HS.KnownExtension
+#else
 explicitForAll :: HS.Extension
+#endif
 explicitForAll =
 -- GHC 7.0.1 cannot parse the following CPP conditional
 -- error: missing binary operator before token "("
