--- cfitsio.pc.in.orig	2008-06-02 01:20:50.000000000 +0100
+++ cfitsio.pc.in	2008-06-02 01:22:14.000000000 +0100
@@ -1,10 +1,10 @@
 prefix=@prefix@
 exec_prefix=@exec_prefix@
-libdir=${exec_prefix}/lib
-includedir=${prefix}/include
+libdir=@libdir@
+includedir=@includedir@
 
-Name: cfitsio
+Name: @PACKAGE_NAME@
 Description: FITS File Subroutine Library
-Version: 3.006
-Libs: -L${libdir} -lcfitsio @LIBS@ -lm
+Version: @PACKAGE_VERSION@
+Libs: -L${libdir} -lcfitsio @LIBS@
 Cflags: -I${includedir}
--- configure.ac.orig	1970-01-01 01:00:00.000000000 +0100
+++ configure.ac	2009-08-20 00:25:49.000000000 +0100
@@ -0,0 +1,181 @@
+AC_PREREQ(2.59)
+AC_INIT([cfitsio], [3.140], [pence@tetra.gsfc.nasa.gov])
+AC_CONFIG_SRCDIR([fitscore.c])
+AM_INIT_AUTOMAKE([foreign])
+
+
+AC_PROG_LIBTOOL
+dnl no api version info, so simply copy package version
+SHARED_VERSION_INFO="3:0:0"
+AC_SUBST(SHARED_VERSION_INFO)
+
+AC_PROG_YACC
+AC_PROG_LEX
+
+AC_MSG_CHECKING([whether to enable fortran interface])
+AC_ARG_ENABLE([fortran],
+   [AS_HELP_STRING([--enable-fortran], [Compile the fortran interface [default=yes]])],
+   [ENABLE_FORTRAN=$enableval])
+
+case x"$ENABLE_FORTRAN" in
+ *)
+    ENABLE_FORTRAN=yes
+    AC_MSG_RESULT([yes])
+    AC_PROG_F77
+    if test x$F77 = xg77; then
+      cfortran_def=g77Fortran
+    elif test x$F77 = xifort ; then
+      cfortran_def=INTEL_COMPILER
+    elif test x$F77 = xgfortran ; then
+      cfortran_def=gFortran
+    elif test x$F77 = xpgf77 ; then
+      cfortran_def=pgiFortran
+    else
+      cfortran_def=f2cFortran
+    fi
+    CPPFLAGS_FORTRAN="-D$cfortran_def"
+    AC_SUBST(CPPFLAGS_FORTRAN)
+    ;;
+ xno)
+    ENABLE_FORTRAN=no
+    AC_MSG_RESULT([no])
+    ;;
+esac
+
+AC_SUBST([ENABLE_FORTRAN])
+AM_CONDITIONAL([ENABLE_FORTRAN], test "x$ENABLE_FORTRAN" = "xyes")
+
+AC_CANONICAL_HOST
+case $host in
+    *apple*darwin*)
+	dnl may break Absoft compilers
+	AC_DEFINE(_LARGEFILE_SOURCE, [1], 
+		  [Define to 1 if you have large file support])
+	AC_DEFINE(_FILE_OFFSET_BITS, [64],
+ 		  [Offsets bits in files])
+	;;
+    *hppa*)
+	CPPFLAGS_EXTRA="-DPG_PPU"
+	;;
+    *sunos5*)
+	AC_DEFINE(_LARGEFILE_SOURCE, [1], 
+		  [Define to 1 if you have large file support])
+	AC_DEFINE(_FILE_OFFSET_BITS, [64],
+ 		  [Offsets bits in files])
+	CPPFLAGS_EXTRA="-DHAVE_ALLOCA_H -DHAVE_POSIX_SIGNALS"
+	;;
+    *irix*)
+	CPPFLAGS_EXTRA="-DHAVE_POSIX_SIGNALS"
+	;;
+    *linux*)
+	AC_DEFINE(_LARGEFILE_SOURCE, [1], 
+		  [Define to 1 if you have large file support])
+	AC_DEFINE(_FILE_OFFSET_BITS, [64],
+ 		  [Offsets bits in files])
+	;;
+    *cygwin*)
+	CPPFLAGS_EXTRA="-DHAVE_POSIX_SIGNALS"
+	;;
+    *)
+	;;
+esac
+AC_SUBST(CPPFLAGS_EXTRA)
+
+AC_CHECK_FUNCS([ftruncate])
+AC_CHECK_FUNCS([shmat shmdt shmget], 
+    AC_DEFINE(HAVE_SHMEM_SERVICES, [1],
+	[Define to yes if you have shared memory functions])
+)
+AC_CHECK_FUNCS([gethostbyname connect],
+   [AC_DEFINE(HAVE_NET_SERVICES, [1], 
+       [Define to 1 if you have network functions])]
+)
+AC_CHECK_TYPE(long long,
+   [AC_DEFINE(HAVE_LONGLONG, [1], 
+   	[Define to 1 if your compiler supports long long])]
+)
+dnl check for flock_t
+AC_MSG_CHECKING([for flock_t in sys/fcntl.h])
+AC_COMPILE_IFELSE(
+	[AC_LANG_PROGRAM([[
+#include <sys/fcntl.h>
+			]], [[
+flock_t filler;
+			]])],
+	[AC_DEFINE(HAVE_FLOCK_T, 1, [if you have flock_t])
+	 AC_MSG_RESULT([yes])],
+	[AC_MSG_RESULT([no]) ])
+
+if test "$HAVE_FLOCK_T" != 1; then
+   AC_MSG_CHECKING([for flock_t in sys/flock.h])
+   AC_COMPILE_IFELSE([
+	AC_LANG_PROGRAM([[
+#include <sys/flock.h>
+			]], [[
+flock_t filler;
+			]])],
+	[AC_DEFINE(HAVE_FLOCK_T, 1, [if you have flock_t])
+	 AC_MSG_RESULT([yes])],
+	[AC_MSG_RESULT([no]) ])
+fi
+
+# check for union semun type
+AC_CHECK_TYPE(union semun,
+   AC_DEFINE(HAVE_UNION_SEMUN, [1],
+	[Define to 1 if you have semun in sys/sem.h]),,[
+#include <sys/types.h>
+#include <sys/ipc.h>
+#include <sys/sem.h>
+		]
+)
+
+dnl this quick check will add -lm to LIBS
+AC_CHECK_LIB(m, cos)
+
+AC_ARG_WITH([gsiftp-flavour],
+  [AC_HELP_STRING([--with-gsiftp-flavour[=PATH]], [Compile with a given Globus Toolkit gsiftp protocol flavour])],
+  ,
+  [withval=no])
+
+case x$withval in
+  xno)
+      AC_MSG_CHECKING([for Globus flavor])
+      AC_MSG_RESULT([none])
+      ;;
+  xyes)
+      AC_MSG_RESULT([yes])
+      ;;
+  *)
+   AC_MSG_RESULT([$withval])
+   GSIFTP_FLAVOUR=$withval
+   AC_DEFINE(GSIFTP_FLAVOUR, [1], 
+	    [Define to 1 if you want Globus Toolkit architecture])
+   ;;
+esac
+
+AC_ARG_WITH(gsiftp,
+    [AC_HELP_STRING([--with-gsiftp[=PATH]], [Compile with Globus Toolkit gsiftp protocol support [default=no]])],
+    ,
+    [withval=no])
+case "x$withval" in
+  xno)
+      AC_MSG_CHECKING([for Globus Toolkit])
+      AC_MSG_RESULT([no])
+      ;;
+  xyes)
+      AC_MSG_RESULT([yes])
+      ;;
+  *)
+      AC_MSG_RESULT([yes])
+      CPPFLAGS_GLOBUS="-I${withval}/include/${GSIFTP_FLAVOUR}"
+      LIBS_GLOBUS="-L${withval}/lib -lglobus_ftp_client_${GSIFTP_FLAVOUR}"
+      HAVE_GSIFTP=yes
+      AC_DEFINE(HAVE_GSIFTP, [1],
+	    [Define if you want Globus Toolkit gsiftp protocol support])
+	    ;;
+esac
+
+AC_SUBST(CPPFLAGS_GLOBUS)
+AC_SUBST(LIBS_GLOBUS)
+AC_CONFIG_FILES([Makefile cfitsio.pc])
+AC_OUTPUT
--- Makefile.am.orig	1970-01-01 01:00:00.000000000 +0100
+++ Makefile.am	2009-08-20 00:45:37.000000000 +0100
@@ -0,0 +1,86 @@
+lib_LTLIBRARIES = libcfitsio.la
+
+C_SOURCES = \
+	buffers.c cfileio.c checksum.c compress.c drvrfile.c drvrmem.c \
+	drvrnet.c drvrsmem.c drvrgsiftp.c editcol.c edithdu.c eval_l.c \
+	eval_y.c eval_f.c fitscore.c getcol.c getcolb.c getcold.c getcole.c \
+	getcoli.c getcolj.c getcolk.c getcoll.c getcols.c getcolsb.c \
+	getcoluk.c getcolui.c getcoluj.c getkey.c group.c grparser.c \
+	histo.c iraffits.c \
+	modkey.c putcol.c putcolb.c putcold.c putcole.c putcoli.c \
+	putcolj.c putcolk.c putcoluk.c putcoll.c putcols.c putcolsb.c \
+	putcolu.c putcolui.c putcoluj.c putkey.c region.c scalnull.c \
+	swapproc.c wcssub.c wcsutil.c imcompress.c quantize.c ricecomp.c \
+	pliocomp.c fits_hcompress.c fits_hdecompress.c
+
+F77_SOURCES=
+if ENABLE_FORTRAN
+F77_SOURCES += f77_wrap1.c f77_wrap2.c f77_wrap3.c f77_wrap4.c f77_wrap.h
+endif
+AM_YFLAGS = -d -v
+
+include_HEADERS = fitsio.h fitsio2.h longnam.h drvrsmem.h
+noinst_HEADERS = cfortran.h  drvrgsiftp.h  eval_defs.h  f77_wrap.h  group.h \
+	compress.h  eval_tab.h   fpack.h   grparser.h  region.h
+
+libcfitsio_la_SOURCES = $(C_SOURCES) $(F77_SOURCES) $(include_HEADERS)
+libcfitsio_la_LDFLAGS = -no-undefined -version-info @SHARED_VERSION_INFO@
+libcfitsio_la_CPPFLAGS = @CPPFLAGS_FORTRAN@ @CPPFLAGS_EXTRA@ @CPPFLAGS_GLOBUS@
+libcfitsio_la_LIBADD = @LIBS_GLOBUS@
+
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = cfitsio.pc
+
+LDADD = libcfitsio.la
+bin_PROGRAMS = fitscopy imcopy listhead fpack funpack
+fitscopy_SOURCES = fitscopy.c
+listhead_SOURCES = listhead.c
+imcopy_SOURCES = imcopy.c
+fpack_SOURCES = fpack.c fpackutil.c
+funpack_SOURCES = funpack.c fpackutil.c
+
+# tests
+check_PROGRAMS = testprog
+noinst_PROGRAMS =  speed cookbook smem
+testprog_SOURCES = testprog.c
+speed_SOURCES = speed.c
+cookbook_SOURCES = cookbook.c
+smem_SOURCES = smem.c
+
+if ENABLE_FORTRAN
+check_PROGRAMS += testf77
+testf77_SOURCES = testf77.f
+endif
+
+EXTRA_DIST = README README.MacOS README.win32 License.txt changes.txt cfitsio.doc fitsio.doc cfitsio.tex fitsio.tex quick.tex
+
+check-local: $(check_PROGRAMS)
+	@total=0; failed=0; \
+	for i in $(check_PROGRAMS); do \
+		echo "--- Testing $$i ---"; \
+		./$$i${EXEEXT} > my_$$i.out; \
+		diff $$i.out my_$$i.out; \
+		cmp $$i.fit $$i.std; \
+		if [ "x$$?" = "x0" ]; then \
+			echo "Test \`$$i' PASSED."; \
+		else \
+			echo "Test \`$$i' FAILED!!!"; \
+			failed=$$(($$failed + 1)); \
+		fi; \
+		total=$$(($$total + 1)); \
+	done; \
+	if [ $$failed -gt 0 ]; then \
+		echo "*** ERROR: $$failed/$$total tests failed!!!"; \
+		echo ""; \
+		exit 1; \
+	fi
+
+eval:
+	@$(LEX) -t eval.l > eval_l.c1; \
+	sed -e 's/yy/ff/g' -e 's/YY/FF/g' eval_l.c1 > eval_l.c; \
+	rm -f eval_l.c1; \
+	$(YACC) -d -v -y eval.y; \
+	sed -e 's/yy/ff/g' -e 's/YY/FF/g' y.tab.c > eval_y.c; \
+	sed -e 's/yy/ff/g' -e 's/YY/FF/g' y.tab.h > eval_tab.h; \
+	rm -f y.tab.c y.tab.h
