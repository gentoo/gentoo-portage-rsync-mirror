From: Julian Ospald <hasufell@gentoo.org>
Date: Sun Jun 24 18:32:38 UTC 2012
Subject: build system

respect flags
let stripping be handled by the system

fix minimal-flags option:
	leave -fvisibility=hidden active
	leave conditional -fpc-preprocess active

--- build/premake/premake4.lua
+++ build/premake/premake4.lua
@@ -177,7 +177,7 @@
 
 function project_set_build_flags()
 
-	flags { "Symbols", "NoEditAndContinue" }
+	flags { "NoEditAndContinue" }
 	if cc ~= "icc" and (os.is("windows") or not _OPTIONS["minimal-flags"]) then
 		-- adds the -Wall compiler flag
 		flags { "ExtraWarnings" } -- this causes far too many warnings/remarks on ICC
@@ -366,13 +366,11 @@
 			end
 		end
 
-		if not _OPTIONS["minimal-flags"] then
-			buildoptions {
-				-- Hide symbols in dynamic shared objects by default, for efficiency and for equivalence with
-				-- Windows - they should be exported explicitly with __attribute__ ((visibility ("default")))
-				"-fvisibility=hidden"
-			}
-		end
+		buildoptions {
+			-- Hide symbols in dynamic shared objects by default, for efficiency and for equivalence with
+			-- Windows - they should be exported explicitly with __attribute__ ((visibility ("default")))
+			"-fvisibility=hidden"
+		}
 
 		if _OPTIONS["bindir"] then
 			defines { "INSTALLED_BINDIR=" .. _OPTIONS["bindir"] }
--- libraries/source/fcollada/src/Makefile
+++ libraries/source/fcollada/src/Makefile
@@ -9,9 +9,9 @@
 
 CXX ?= g++
 CXXFLAGS += -fvisibility=hidden -W -Wall -Wno-unused-parameter -Wno-unused-function $(OS_DEFINE) $(PIC_FLAGS) $(CPPFLAGS)
-CXXFLAGS_DEBUG := -O0 -g -D_DEBUG -DRETAIL
-CXXFLAGS_RELEASE := -O2 -DNDEBUG -DRETAIL
-CXXFLAGS_TEST := -O0 -g -D_DEBUG
+CXXFLAGS_DEBUG := -D_DEBUG -DRETAIL
+CXXFLAGS_RELEASE := -DNDEBUG -DRETAIL
+CXXFLAGS_TEST := -D_DEBUG
 LIBS += `pkg-config libxml-2.0 --libs`
 INCLUDES += -IFCollada `pkg-config libxml-2.0 --cflags`
 INCLUDES_TEST := -IFCollada/FColladaTest $(INCLUDES)
--- build/premake/premake4/src/tools/gcc.lua
+++ build/premake/premake4/src/tools/gcc.lua
@@ -136,8 +136,6 @@
 		if not cfg.flags.Symbols then
 			if cfg.system == "macosx" then
 				table.insert(result, "-Wl,-x")
-			else
-				table.insert(result, "-s")
 			end
 		end
 	
--- build/premake/premake4/build/gmake.unix/Premake4.make
+++ build/premake/premake4/build/gmake.unix/Premake4.make
@@ -26,9 +26,9 @@
   DEFINES   += -DNDEBUG -DLUA_USE_POSIX -DLUA_USE_DLOPEN
   INCLUDES  += -I../../src/host/lua-5.1.4/src
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
-  CFLAGS    += $(CPPFLAGS) -Wall -Os
-  CXXFLAGS  += $(CPPFLAGS) -Wall -Os
-  LDFLAGS   += -s -rdynamic
+  CFLAGS    += $(CPPFLAGS) -Wall
+  CXXFLAGS  += $(CPPFLAGS) -Wall
+  LDFLAGS   += -rdynamic
   LIBS      += -lm -ldl 
   RESFLAGS  += $(DEFINES) $(INCLUDES) 
   LDDEPS    += 
@@ -48,8 +48,8 @@
   DEFINES   += -D_DEBUG -DLUA_USE_POSIX -DLUA_USE_DLOPEN
   INCLUDES  += -I../../src/host/lua-5.1.4/src
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
-  CFLAGS    += $(CPPFLAGS) -Wall -g
-  CXXFLAGS  += $(CPPFLAGS) -Wall -g
+  CFLAGS    += $(CPPFLAGS) -Wall
+  CXXFLAGS  += $(CPPFLAGS) -Wall
   LDFLAGS   += -rdynamic
   LIBS      += -lm -ldl 
   RESFLAGS  += $(DEFINES) $(INCLUDES) 
@@ -302,4 +302,4 @@
 	$(SILENT) $(CC) $(PCHINCLUDES) $(CFLAGS) -MF $(OBJDIR)/lauxlib.d -MT "$@" -o "$@" -c "$<"
 
 -include $(OBJECTS:%.o=%.d)
--include $(GCH:%.h.gch=%.h.d)
\ No newline at end of file
+-include $(GCH:%.h.gch=%.h.d)
