 configure.ac    |    6 +++---
 src/Makefile.am |   30 +++++++++++++++---------------
 2 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/configure.ac b/configure.ac
index 314a78e..f6933e6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -68,7 +68,8 @@ AC_CANONICAL_HOST
 # set CFLAGS and CXXFLAGS
 #user_CFLAGS="${CXXFLAGS}"
 user_CFLAGS=${CFLAGS}
-generic_CFLAGS="-Wall -Wno-strict-aliasing -g -gdwarf-2 -Wuninitialized"
+#generic_CFLAGS="-Wall -Wno-strict-aliasing -Wuninitialized"
+generic_CFLAGS=""
 ext_CFLAGS=""
 debug_CFLAGS=""
 AC_ARG_ENABLE(intel64,      [  --enable-intel64        optimize for Intel64 CPU such as Xeon and Core2],
@@ -84,7 +85,7 @@ AC_ARG_ENABLE([optim],
               [if test "x$enable_optim" = xyes; then enable_optim=3; fi],
               [enable_optim=3])
 
-AS_IF([test "x$enable_optim" != xno], [ext_CFLAGS="$ext_CFLAGS -O$enable_optim"])	
+#AS_IF([test "x$enable_optim" != xno], [ext_CFLAGS="$ext_CFLAGS -O$enable_optim"])	
 AS_IF([test "x$enable_debug" = xyes],
       [debug_CFLAGS="-DDEBUG"],
       [debug_CFLAGS="-DNDEBUG"])
@@ -92,7 +93,6 @@ AS_IF([test "x$enable_debug" = xyes],
 CFLAGS="${generic_CFLAGS} ${ext_CFLAGS} ${user_CFLAGS} ${debug_CFLAGS}"
 CXXFLAGS="$CFLAGS"
 CXXFLAGS="$CXXFLAGS $BOOST_CPPFLAGS $BAM_CPPFLAGS -I./SeqAn-1.3"
-LDFLAGS="$ext_LDFLAGS"
 
 AM_INIT_AUTOMAKE([-Wall foreign tar-pax foreign])
 
diff --git a/src/Makefile.am b/src/Makefile.am
index aa17841..42f9c0c 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -2,7 +2,7 @@
 
 #SUBDIRS = samtools
 
-#AM_CXXFLAGS = -I$(top_srcdir)/src/SeqAn-1.3
+AM_CXXFLAGS = -I$(top_srcdir)/src/SeqAn-1.3
 
 # Generated with 
 # find SeqAn-1.3 -type f -print | grep -v ".svn" | sed 's/$/ \\/g'
@@ -550,7 +550,7 @@ CLEANFILES = \
 	tophat2
 
 tophat2: tophat2.in
-	sed -e 's|__PREFIX__|$(prefix)|' tophat2.in > tophat2
+	sed -e 's|__PREFIX__|$(prefix)|' $(top_srcdir)/src/tophat2.in > tophat2
 
 #SUFFIXES = .py
 #.py:
@@ -621,53 +621,53 @@ libgc_a_SOURCES = \
 #-- program sources
 
 prep_reads_SOURCES = prep_reads.cpp
-prep_reads_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
+prep_reads_LDADD = libtophat.a $(BAM_LIB)
 prep_reads_LDFLAGS = $(BAM_LDFLAGS)
 
 segment_juncs_SOURCES = segment_juncs.cpp
-segment_juncs_LDADD = $(top_builddir)/src/libtophat.a $(BOOST_THREAD_LIB) $(BAM_LIB)
+segment_juncs_LDADD = libtophat.a $(BOOST_THREAD_LIB) $(BAM_LIB)
 segment_juncs_LDFLAGS = $(BOOST_LDFLAGS) $(BAM_LDFLAGS)
 
 long_spanning_reads_SOURCES = long_spanning_reads.cpp
-long_spanning_reads_LDADD = $(top_builddir)/src/libtophat.a $(BOOST_THREAD_LIB) $(BAM_LIB)
+long_spanning_reads_LDADD = libtophat.a $(BOOST_THREAD_LIB) $(BAM_LIB)
 long_spanning_reads_LDFLAGS = $(BOOST_LDFLAGS) $(BAM_LDFLAGS)
 
 gtf_juncs_SOURCES = gtf_juncs.cpp
-gtf_juncs_LDADD = $(top_builddir)/src/libtophat.a libgc.a $(BAM_LIB)
+gtf_juncs_LDADD = libtophat.a libgc.a $(BAM_LIB)
 gtf_juncs_LDFLAGS = $(BAM_LDFLAGS)
 
 juncs_db_SOURCES = juncs_db.cpp
-juncs_db_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
+juncs_db_LDADD = libtophat.a $(BAM_LIB)
 juncs_db_LDFLAGS = $(BAM_LDFLAGS)
 
 tophat_reports_SOURCES = tophat_reports.cpp
-tophat_reports_LDADD = $(top_builddir)/src/libtophat.a  $(BOOST_THREAD_LIB) $(BAM_LIB)
+tophat_reports_LDADD = libtophat.a  $(BOOST_THREAD_LIB) $(BAM_LIB)
 tophat_reports_LDFLAGS = $(BOOST_LDFLAGS) $(BAM_LDFLAGS)
 
 fix_map_ordering_SOURCES = fix_map_ordering.cpp
-fix_map_ordering_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
+fix_map_ordering_LDADD = libtophat.a $(BAM_LIB)
 fix_map_ordering_LDFLAGS = $(BAM_LDFLAGS)
 
 bam2fastx_SOURCES = bam2fastx.cpp
-bam2fastx_LDADD = $(top_builddir)/src/libgc.a $(BAM_LIB)
+bam2fastx_LDADD = libgc.a $(BAM_LIB)
 bam2fastx_LDFLAGS = $(BAM_LDFLAGS)
 
 bam_merge_SOURCES = bam_merge.cpp
-bam_merge_LDADD = $(top_builddir)/src/libtophat.a $(top_builddir)/src/libgc.a $(BAM_LIB)
+bam_merge_LDADD = libtophat.a libgc.a $(BAM_LIB)
 bam_merge_LDFLAGS = $(BAM_LDFLAGS)
 
 closure_juncs_SOURCES = closures.cpp
-closure_juncs_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
+closure_juncs_LDADD = libtophat.a $(BAM_LIB)
 closure_juncs_LDFLAGS = $(BAM_LDFLAGS)
 
 sam_juncs_SOURCES = sam_juncs.cpp
-sam_juncs_LDADD = $(top_builddir)/src/libtophat.a $(BAM_LIB)
+sam_juncs_LDADD = libtophat.a $(BAM_LIB)
 sam_juncs_LDFLAGS = $(BAM_LDFLAGS)
 
 map2gtf_SOURCES = map2gtf.cpp
-map2gtf_LDADD = $(top_builddir)/src/libtophat.a libgc.a $(BAM_LIB)
+map2gtf_LDADD = libtophat.a libgc.a $(BAM_LIB)
 map2gtf_LDFLAGS = $(BAM_LDFLAGS)
 
 gtf_to_fasta_SOURCES = GTFToFasta.cpp FastaTools.cpp
-gtf_to_fasta_LDADD = $(top_builddir)/src/libtophat.a libgc.a $(BAM_LIB)
+gtf_to_fasta_LDADD = libtophat.a libgc.a $(BAM_LIB)
 gtf_to_fasta_LDFLAGS = $(BAM_LDFLAGS)
