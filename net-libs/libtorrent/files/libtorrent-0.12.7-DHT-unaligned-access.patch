Upstream: http://libtorrent.rakshasa.no/ticket/1263

From 6679a23244579f1a5a9930b8ba02e0df9a2a6622 Mon Sep 17 00:00:00 2001
From: rakshasa <rakshasa@e378c898-3ddf-0310-93e7-cc216c733640>
Date: Tue, 7 Jun 2011 11:37:15 +0000
Subject: [PATCH] * fixed an issue where DHT's hashing function for TR1 unordered_map was casting unaligned size_t pointers.

git-svn-id: svn://rakshasa.no/libtorrent/trunk/libtorrent@1235 e378c898-3ddf-0310-93e7-cc216c733640
---
 src/dht/dht_hash_map.h |   32 ++++++++++++++++++++++++++++----
 1 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/src/dht/dht_hash_map.h b/src/dht/dht_hash_map.h
index a8bed6c..04c4991 100644
--- a/src/dht/dht_hash_map.h
+++ b/src/dht/dht_hash_map.h
@@ -65,13 +65,37 @@ namespace torrent {
 static const unsigned int hashstring_hash_ofs = 8;
 
 struct hashstring_ptr_hash : public std::unary_function<const HashString*, size_t> {
-  size_t operator () (const HashString* n) const 
-  { return *(size_t*)(n->data() + hashstring_hash_ofs); }
+  size_t operator () (const HashString* n) const {
+#if USE_ALIGNED
+    size_t result = 0;
+    const char *first = n->data() + hashstring_hash_ofs;
+    const char *last = first + sizeof(size_t);
+
+    while (first != last)
+      result = (result << 8) + *first++;
+    
+    return result;
+#else
+    return *(size_t*)(n->data() + hashstring_hash_ofs);
+#endif
+  }
 };
 
 struct hashstring_hash : public std::unary_function<HashString, size_t> {
-  size_t operator () (const HashString& n) const 
-  { return *(size_t*)(n.data() + hashstring_hash_ofs); }
+  size_t operator () (const HashString& n) const {
+#if USE_ALIGNED
+    size_t result = 0;
+    const char *first = n.data() + hashstring_hash_ofs;
+    const char *last = first + sizeof(size_t);
+
+    while (first != last)
+      result = (result << 8) + *first++;
+    
+    return result;
+#else
+    return *(size_t*)(n.data() + hashstring_hash_ofs);
+#endif
+  }
 };
 
 // Compare HashString pointers by dereferencing them.
-- 
1.7.3.4

