--- mapnik-v2.0.1.orig/SConstruct
+++ mapnik-v2.0.1/SConstruct
@@ -313,9 +313,9 @@
     ('LINK_PRIORITY','Priority list in which to sort library and include paths (default order is internal, other, frameworks, user, then system - see source of `sort_paths` function for more detail)',','.join(DEFAULT_LINK_PRIORITY)),    
     
     # Install Variables
-    ('PREFIX', 'The install path "prefix"', '/usr/local'),
+    ('PREFIX', 'The install path "prefix"', '/usr'),
     ('PYTHON_PREFIX','Custom install path "prefix" for python bindings (default of no prefix)',''),
-    ('DESTDIR', 'The root directory to install into. Useful mainly for binary package building', '/'),
+    ('DESTDIR', 'The root directory to install into. Useful mainly for binary package building', '${D}'),
     ('PATH', 'A custom path (or multiple paths divided by ":") to append to the $PATH env to prioritize usage of command line programs (if multiple are present on the system)', ''),
     ('PATH_REMOVE', 'A path prefix to exclude from all know command and compile paths', ''),
     
@@ -342,15 +342,17 @@
     PathVariable('JPEG_LIBS', 'Search path for libjpeg library files', '/usr/' + LIBDIR_SCHEMA, PathVariable.PathAccept),
     PathVariable('TIFF_INCLUDES', 'Search path for libtiff include files', '/usr/include', PathVariable.PathAccept),
     PathVariable('TIFF_LIBS', 'Search path for libtiff library files', '/usr/' + LIBDIR_SCHEMA, PathVariable.PathAccept),
-    PathVariable('PROJ_INCLUDES', 'Search path for PROJ.4 include files', '/usr/local/include', PathVariable.PathAccept),
-    PathVariable('PROJ_LIBS', 'Search path for PROJ.4 library files', '/usr/local/' + LIBDIR_SCHEMA, PathVariable.PathAccept),
+    PathVariable('PROJ_INCLUDES', 'Search path for PROJ.4 include files', '/usr/include', PathVariable.PathAccept),
+    PathVariable('PROJ_LIBS', 'Search path for PROJ.4 library files', '/usr/' + LIBDIR_SCHEMA, PathVariable.PathAccept),
+    PathVariable('AGG_INCLUDES', 'Search path for AGG include files', '/usr/include/agg2', PathVariable.PathAccept),
+    PathVariable('AGG_LIBS', 'Search path for AGG library files', '/usr/' + LIBDIR_SCHEMA, PathVariable.PathAccept),
     ('PKG_CONFIG_PATH', 'Use this path to point pkg-config to .pc files instead of the PKG_CONFIG_PATH environment setting',''),
     
     # Variables affecting rendering back-ends
     
     BoolVariable('RENDERING_STATS', 'Output rendering statistics during style processing', 'False'),
     
-    BoolVariable('INTERNAL_LIBAGG', 'Use provided libagg', 'True'),
+    BoolVariable('INTERNAL_LIBAGG', 'Use provided libagg', 'False'),
 
     BoolVariable('SVG_RENDERER', 'build support for native svg renderer', 'False'),
     
@@ -1087,6 +1089,7 @@
         ['z', 'zlib.h', True,'C'],
         ['proj', 'proj_api.h', True,'C'],
         [env['ICU_LIB_NAME'],'unicode/unistr.h',True,'C++'],
+        ['agg','agg2/agg_config.h' , True,'C++'],
     ]
 
     if env['JPEG']:
diff -ur mapnik-v2.0.1.orig/src/build.py mapnik-v2.0.1/src/build.py
--- mapnik-v2.0.1.orig/src/build.py	2012-04-09 23:56:48.000000000 +0100
+++ mapnik-v2.0.1/src/build.py	2012-05-06 17:00:53.124452488 +0100
@@ -333,9 +333,6 @@
     if 'uninstall' not in COMMAND_LINE_TARGETS:
       result = env.InstallAs(target=target, source=mapnik)
       env.Alias(target='install', source=result)
-      if result:
-            env.AddPostAction(result, ldconfig)
-
     
     # Install symlinks
     target1 = os.path.join(env['MAPNIK_LIB_BASE_DEST'], "%s.%d.%d" % (os.path.basename(str(mapnik[0])),int(major), int(minor)))
