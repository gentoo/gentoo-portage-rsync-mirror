diff -ru Code/com/jamonapi/utils/CommandIterator.java Code-patched/com/jamonapi/utils/CommandIterator.java
--- Code/com/jamonapi/utils/CommandIterator.java	2004-01-29 22:42:34.000000000 -0500
+++ Code-patched/com/jamonapi/utils/CommandIterator.java	2005-11-04 08:52:30.000000000 -0500
@@ -38,8 +38,8 @@
     
     
     /** Iterate through an Enumeration passing the Command object each element in the Collection **/
-    public static void iterate(Enumeration enum, Command command)throws Exception     {
-        iterate(new EnumIterator(enum) , command);
+    public static void iterate(Enumeration my_enum, Command command)throws Exception     {
+        iterate(new EnumIterator(my_enum) , command);
     }
 
     /** Iterate passing each Command each Object that is being iterated **/
diff -ru Code/com/jamonapi/utils/EnumIterator.java Code-patched/com/jamonapi/utils/EnumIterator.java
--- Code/com/jamonapi/utils/EnumIterator.java	2004-01-29 22:42:34.000000000 -0500
+++ Code-patched/com/jamonapi/utils/EnumIterator.java	2005-11-04 08:52:10.000000000 -0500
@@ -6,18 +6,18 @@
 
 
 public class EnumIterator extends java.lang.Object implements java.util.Iterator {
-    Enumeration enum;
+    Enumeration my_enum;
 
-    public EnumIterator(Enumeration enum) {
-        this.enum=enum;
+    public EnumIterator(Enumeration my_enum) {
+        this.my_enum=my_enum;
     }
     
     public boolean hasNext() {
-        return enum.hasMoreElements();
+        return my_enum.hasMoreElements();
     }
     
     public Object next() {
-        return enum.nextElement();
+        return my_enum.nextElement();
     }
     
     public void remove() {
