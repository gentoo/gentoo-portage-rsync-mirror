--- jython-2.1/com/ziclix/python/sql/pipe/Pipe.java.orig	2006-07-29 21:31:34.000000000 +0200
+++ jython-2.1/com/ziclix/python/sql/pipe/Pipe.java	2006-07-29 21:31:41.000000000 +0200
@@ -93,7 +93,7 @@
 													 new Integer(sinkRunner.getCount()) };
 			String msg = zxJDBC.getString("inconsistentRowCount", counts);
 
-			Py.assert(Py.Zero, Py.newString(msg));
+			Py.assert_(Py.Zero, Py.newString(msg));
 		}
 
 		return Py.newInteger(sinkRunner.getCount());
--- jython-2.1/org/python/compiler/CodeCompiler.java.orig	2006-07-29 21:28:47.000000000 +0200
+++ jython-2.1/org/python/compiler/CodeCompiler.java	2006-07-29 21:30:13.000000000 +0200
@@ -817,14 +817,14 @@
             node.getChild(1).visit(this);
             if (mrefs.assert2 == 0) {
                 mrefs.assert2 = code.pool.Methodref(
-                    "org/python/core/Py", "assert",
+                    "org/python/core/Py", "assert_",
                     "(" + $pyObj + $pyObj + ")V");
             }
             code.invokestatic(mrefs.assert2);
         } else {
             if (mrefs.assert1 == 0) {
                 mrefs.assert1 = code.pool.Methodref(
-                    "org/python/core/Py", "assert",
+                    "org/python/core/Py", "assert_",
                     "(" + $pyObj + ")V");
             }
             code.invokestatic(mrefs.assert1);
--- jython-2.1/org/python/core/Py.java.orig	2006-07-29 21:29:19.000000000 +0200
+++ jython-2.1/org/python/core/Py.java	2006-07-29 21:30:40.000000000 +0200
@@ -986,14 +986,14 @@
 
 
     /* Equivalent to Python's assert statement */
-    public static void assert(PyObject test, PyObject message) {
+    public static void assert_(PyObject test, PyObject message) {
         if (!test.__nonzero__()) {
             throw new PyException(Py.AssertionError, message);
         }
     }
 
-    public static void assert(PyObject test) {
-        assert(test, Py.None);
+    public static void assert_(PyObject test) {
+        assert_(test, Py.None);
     }
 
     /* Helpers to implement finally clauses */
