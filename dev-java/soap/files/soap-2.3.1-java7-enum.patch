diff --git a/soap-2_3_1/src/org/apache/soap/encoding/soapenc/VectorSerializer.java b/soap-2_3_1/src/org/apache/soap/encoding/soapenc/VectorSerializer.java
index 61c9b6a..ac603b3 100644
--- a/soap-2_3_1/src/org/apache/soap/encoding/soapenc/VectorSerializer.java
+++ b/soap-2_3_1/src/org/apache/soap/encoding/soapenc/VectorSerializer.java
@@ -92,7 +92,7 @@ public class VectorSerializer implements Serializer, Deserializer
                         src.getClass().toString() + "' to VectorSerializer");
 
         String lengthStr;
-        Enumeration enum;
+        Enumeration enumx;
         
         if (src instanceof Enumeration) {
                 /** TODO: Right now we don't include a length on Enumerations,
@@ -100,11 +100,11 @@ public class VectorSerializer implements Serializer, Deserializer
                  * doing the length calculation (at the cost of traversing the
                  * Enumeration) for a particular installation/service/call.
                  */
-                enum = (Enumeration)src;
+                enumx = (Enumeration)src;
                 lengthStr = "";
         } else {
                 Vector v = (Vector)src;
-                enum = v.elements();
+                enumx = v.elements();
         
                 lengthStr = src != null
                        ? v.size() + ""
@@ -132,7 +132,7 @@ public class VectorSerializer implements Serializer, Deserializer
 
       sink.write(StringUtils.lineSeparator);
 
-      for (Enumeration e = enum; e.hasMoreElements(); )
+      for (Enumeration e = enumx; e.hasMoreElements(); )
       {
         nsStack.pushScope();
 
diff --git a/soap-2_3_1/src/org/apache/soap/providers/StatefulEJBProvider.java b/soap-2_3_1/src/org/apache/soap/providers/StatefulEJBProvider.java
index 8d9e773..6498e05 100644
--- a/soap-2_3_1/src/org/apache/soap/providers/StatefulEJBProvider.java
+++ b/soap-2_3_1/src/org/apache/soap/providers/StatefulEJBProvider.java
@@ -189,8 +189,8 @@ public class StatefulEJBProvider implements Provider {
         remoteObjRef = (Remote) ret.getValue();
       } catch (ClassCastException cce) {
         // Try to cast to an enumeration:
-        Enumeration enum = (Enumeration) ret.getValue();
-        remoteObjRef = (Remote) enum.nextElement();
+        Enumeration enumx = (Enumeration) ret.getValue();
+        remoteObjRef = (Remote) enumx.nextElement();
       }
       // Set the return value to null, so that the remote object is not
       // included in the response destined for the client.
diff --git a/soap-2_3_1/src/org/apache/soap/server/http/MessageRouterServlet.java b/soap-2_3_1/src/org/apache/soap/server/http/MessageRouterServlet.java
index bbf3021..533223f 100644
--- a/soap-2_3_1/src/org/apache/soap/server/http/MessageRouterServlet.java
+++ b/soap-2_3_1/src/org/apache/soap/server/http/MessageRouterServlet.java
@@ -160,10 +160,10 @@ public class MessageRouterServlet extends HttpServlet {
       if (factory != null) {
         try {
           Properties props = new Properties();
-          Enumeration enum = servletConfig.getInitParameterNames();
+          Enumeration enumx = servletConfig.getInitParameterNames();
 
-          while (enum.hasMoreElements()) {
-            String name = (String)enum.nextElement();
+          while (enumx.hasMoreElements()) {
+            String name = (String)enumx.nextElement();
 
             if (!Constants.ENVELOPE_EDITOR_FACTORY.equals(name)
                 && !Constants.XML_PARSER.equals(name)) {
diff --git a/soap-2_3_1/src/org/apache/soap/server/http/RPCRouterServlet.java b/soap-2_3_1/src/org/apache/soap/server/http/RPCRouterServlet.java
index b723d4a..ac6a75c 100644
--- a/soap-2_3_1/src/org/apache/soap/server/http/RPCRouterServlet.java
+++ b/soap-2_3_1/src/org/apache/soap/server/http/RPCRouterServlet.java
@@ -178,10 +178,10 @@ public class RPCRouterServlet extends HttpServlet {
 	  /*First we put in the servletContext parameters, and then
 	    overwrite them with the servletConfig parameters if 
 	    they are present.*/
-          Enumeration enum = servletContext.getInitParameterNames();
+          Enumeration enumx = servletContext.getInitParameterNames();
 	  
-          while (enum.hasMoreElements()) {
-            String name = (String)enum.nextElement();
+          while (enumx.hasMoreElements()) {
+            String name = (String)enumx.nextElement();
 
             if (!Constants.ENVELOPE_EDITOR_FACTORY.equals(name)
                 && !Constants.XML_PARSER.equals(name)) {
@@ -189,10 +189,10 @@ public class RPCRouterServlet extends HttpServlet {
             }
           }
 
-          enum = servletConfig.getInitParameterNames();
+          enumx = servletConfig.getInitParameterNames();
 
-          while (enum.hasMoreElements()) {
-            String name = (String)enum.nextElement();
+          while (enumx.hasMoreElements()) {
+            String name = (String)enumx.nextElement();
 
             if (!Constants.ENVELOPE_EDITOR_FACTORY.equals(name)
                 && !Constants.XML_PARSER.equals(name)) {
diff --git a/soap-2_3_1/src/org/apache/soap/transport/http/SOAPHTTPConnection.java b/soap-2_3_1/src/org/apache/soap/transport/http/SOAPHTTPConnection.java
index 6e7530d..cf6c3e4 100644
--- a/soap-2_3_1/src/org/apache/soap/transport/http/SOAPHTTPConnection.java
+++ b/soap-2_3_1/src/org/apache/soap/transport/http/SOAPHTTPConnection.java
@@ -397,8 +397,8 @@ public class SOAPHTTPConnection implements SOAPTransport {
    */
   private static String getHeaderValue (Hashtable headers, String headerName)
   {
-    for (Enumeration enum = headers.keys (); enum.hasMoreElements ();) {
-      String key = (String) enum.nextElement();
+    for (Enumeration enumx = headers.keys (); enumx.hasMoreElements ();) {
+      String key = (String) enumx.nextElement();
 
       if (key.equalsIgnoreCase (headerName)) {
         return (String) headers.get(key);
