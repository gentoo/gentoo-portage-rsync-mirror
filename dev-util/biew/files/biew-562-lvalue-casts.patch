diff -Naurp biew-562-orig/biewlib/file_ini.c biew-562/biewlib/file_ini.c
--- biew-562-orig/biewlib/file_ini.c	2006-08-12 21:56:49.000000000 +0200
+++ biew-562/biewlib/file_ini.c	2006-08-13 12:01:32.000000000 +0200
@@ -1295,7 +1295,7 @@ static tBool __NEAR__ __FASTCALL__ __add
   void __HUGE__ *found;
   ini_cache __HUGE__ *it;
   ini_cache ic;
-  (const char *)ic.item = section;
+  ic.item = section;
   ic.flags = 0;
   if(!(found =la_Find((linearArray *)opening->cache,&ic,__full_compare_cache)))
   {
@@ -1325,7 +1325,7 @@ static tBool __NEAR__ __FASTCALL__ __add
   {
     do_subsect:
       it = (ini_cache __HUGE__ *)found;
-      (const char *)ic.item = subsection;
+      ic.item = subsection;
       if(!(found=la_Find(it->v.leaf,&ic,__full_compare_cache)))
       {
         ic.item = PMalloc(strlen(subsection)+1);
@@ -1354,7 +1354,7 @@ static tBool __NEAR__ __FASTCALL__ __add
       {
         do_item:
         it = (ini_cache __HUGE__ *)found;
-        (const char *)ic.item = item;
+        ic.item = item;
         ic.flags = IC_STRING;
         if(!(found=la_Find(it->v.leaf,&ic,__full_compare_cache)))
         {
@@ -1589,15 +1589,15 @@ unsigned __FASTCALL__ iniReadProfileStri
           ini_cache ic;
           void __HUGE__ *found,__HUGE__ *foundi,__HUGE__ *foundv;
           ini_cache __HUGE__ *fi;
-          (const char *)ic.item = section;
+          ic.item = section;
           ic.flags = 0;
           if((found=la_Find(ini->cache,&ic,__full_compare_cache))!=NULL)
           {
-            (const char *)ic.item=subsection;
+            ic.item=subsection;
             fi = (ini_cache __HUGE__ *)found;
             if((foundi=la_Find(fi->v.leaf,&ic,__full_compare_cache))!=NULL)
             {
-               (const char *)ic.item = _item;
+               ic.item = _item;
                ic.flags = IC_STRING;
                fi = (ini_cache __HUGE__ *)foundi;
                if((foundv=la_Find(fi->v.leaf,&ic,__full_compare_cache))!=NULL)
diff -Naurp biew-562-orig/biewlib/sysdep/ia16/cmn_ix86.c biew-562/biewlib/sysdep/ia16/cmn_ix86.c
--- biew-562-orig/biewlib/sysdep/ia16/cmn_ix86.c	2006-08-12 21:56:49.000000000 +0200
+++ biew-562/biewlib/sysdep/ia16/cmn_ix86.c	2006-08-13 12:01:32.000000000 +0200
@@ -47,7 +47,7 @@ static unsigned long __NEAR__ __FASTCALL
   ctrl_arr = c_arr;
   /* align pointer on 16-byte boundary */
 
-  if((tUInt32)ctrl_arr & 15) ((tUInt32)ctrl_arr) += 16-((tUInt32)ctrl_arr&15);
+  if((tUInt32)ctrl_arr & 15) ctrl_arr += 16-((tUInt32)ctrl_arr&15);
 
   memset(ctrl_arr,0,sizeof(ctrl_arr));
   if(time_interval)
diff -Naurp biew-562-orig/biewlib/sysdep/ia32/aclib_template.c biew-562/biewlib/sysdep/ia32/aclib_template.c
--- biew-562-orig/biewlib/sysdep/ia32/aclib_template.c	2006-08-12 21:56:49.000000000 +0200
+++ biew-562/biewlib/sysdep/ia32/aclib_template.c	2006-08-13 12:03:54.000000000 +0200
@@ -159,8 +159,8 @@ static void * RENAME(fast_memcpy)(void *
 		"movntps %%xmm2, 32(%1)\n"
 		"movntps %%xmm3, 48(%1)\n"
 		:: "r" (from), "r" (to) : "memory");
-		((const unsigned char *)from)+=64;
-		((unsigned char *)to)+=64;
+		from += 64;
+		to += 64;
 	}
 	else
 	/*
@@ -181,8 +181,8 @@ static void * RENAME(fast_memcpy)(void *
 		"movntps %%xmm2, 32(%1)\n"
 		"movntps %%xmm3, 48(%1)\n"
 		:: "r" (from), "r" (to) : "memory");
-		((const unsigned char *)from)+=64;
-		((unsigned char *)to)+=64;
+		from += 64;
+		to+=64;
 	}
 #else
 	// Align destination at BLOCK_SIZE boundary
@@ -209,8 +209,8 @@ static void * RENAME(fast_memcpy)(void *
 		MOVNTQ" %%mm6, 48(%1)\n"
 		MOVNTQ" %%mm7, 56(%1)\n"
 		:: "r" (from), "r" (to) : "memory");
-		((const unsigned char *)from)+=64;
-		((unsigned char *)to)+=64;
+		from+=64;
+		to+=64;
 	}
 
 	// Pure Assembly cuz gcc is a bit unpredictable ;)
@@ -297,8 +297,8 @@ static void * RENAME(fast_memcpy)(void *
 		MOVNTQ" %%mm6, 48(%1)\n"
 		MOVNTQ" %%mm7, 56(%1)\n"
 		:: "r" (from), "r" (to) : "memory");
-		((const unsigned char *)from)+=64;
-		((unsigned char *)to)+=64;
+		from+=64;
+		to+=64;
 	}
 
 #endif /* Have SSE */
@@ -367,7 +367,7 @@ static void * RENAME(fast_memset)(void *
 		"movntps %%xmm0, 96(%0)\n"
 		"movntps %%xmm0, 112(%0)\n"
 		:: "r" (to) : "memory");
-		((unsigned char *)to)+=128;
+		to+=128;
 	}
 #else
 	__asm__ __volatile__(
@@ -393,7 +393,7 @@ static void * RENAME(fast_memset)(void *
 		MOVNTQ" %%mm0, 112(%0)\n"
 		MOVNTQ" %%mm0, 120(%0)\n"
 		:: "r" (to) : "memory");
-		((unsigned char *)to)+=128;
+		to+=128;
 	}
 #endif /* Have SSE */
 #ifdef HAVE_MMX2
diff -Naurp biew-562-orig/biewlib/tw_class.c biew-562/biewlib/tw_class.c
--- biew-562-orig/biewlib/tw_class.c	2006-08-12 21:56:50.000000000 +0200
+++ biew-562/biewlib/tw_class.c	2006-08-13 12:01:32.000000000 +0200
@@ -71,6 +71,6 @@ void __FASTCALL__ twcDestroyClassSet(voi
 TwClass * __FASTCALL__ twcFindClass(const char *name)
 {
  TwClass key;
- (const char *)(key.name) = name;
+ key.name = name;
  return (TwClass *)la_Find(class_set,&key, comp_class);
 }
diff -Naurp biew-562-orig/biewlib/twin.c biew-562/biewlib/twin.c
--- biew-562-orig/biewlib/twin.c	2006-08-12 21:56:50.000000000 +0200
+++ biew-562/biewlib/twin.c	2006-08-13 12:01:32.000000000 +0200
@@ -1891,9 +1891,9 @@ int __FASTCALL__ twPutS(const char *str)
        strcpy(__nls,str);
        __nls_OemToOsdep((unsigned char *)__nls,len);
      }
-     else (const char *)__nls = str;
+     else __nls = str;
   }
-  else (const char *)__nls = str;
+  else __nls = str;
   __nls_ptr = __nls;
   __oem_ptr = str;
   vidx = active->cur_x + active->cur_y*active->wwidth;
