--- ixp_osal/os/linux/include/core/IxOsalOs.h
+++ ixp_osal/os/linux/include/core/IxOsalOs.h
@@ -56,6 +56,7 @@
 #include <linux/cache.h>
 #include <linux/mm.h>
 #include <linux/config.h>
+#include <linux/version.h>
 #include <asm/pgalloc.h>
 
 /**
@@ -66,9 +67,23 @@
 
 #define IX_OSAL_OS_MMU_PHYS_TO_VIRT(addr)  ((addr) ? phys_to_virt((unsigned int)(addr)) : 0)
 
-#define IX_OSAL_OS_CACHE_INVALIDATE(addr, size)  ( invalidate_dcache_range((__u32)addr, (__u32)addr + size )) 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0))
+/*
+ * 2.6 kernels do not export the required cache functions.
+ */
+extern void ixOsalCacheInvalidateRange(unsigned long start, unsigned long size);
+extern void ixOsalCacheFlushRange(unsigned long start, unsigned long size);
+
+#define IX_OSAL_OS_CACHE_INVALIDATE(addr, size) \
+ixOsalCacheInvalidateRange((unsigned long)addr, (unsigned long)addr + size)
+#define IX_OSAL_OS_CACHE_FLUSH(addr, size) \
+ixOsalCacheFlushRange((unsigned long)addr, (unsigned long)addr + size )
 
+#else
+
+#define IX_OSAL_OS_CACHE_INVALIDATE(addr, size)  ( invalidate_dcache_range((__u32)addr, (__u32)addr + size )) 
 #define IX_OSAL_OS_CACHE_FLUSH(addr, size) ( clean_dcache_range((__u32)addr, (__u32)addr + size ))
+#endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)) */
 
 /* Cache preload not available*/
 #define IX_OSAL_OS_CACHE_PRELOAD(addr,size) {}
--- ixp_osal/os/linux/src/core/IxOsalOsCacheMMU.c
+++ ixp_osal/os/linux/src/core/IxOsalOsCacheMMU.c
@@ -210,3 +210,59 @@ ixOsalCacheDmaFree (void *ptr)
 	free_pages ((unsigned int) memptr, order);
     }
 }
+
+
+/*
+ * 2.6 kernels do not export the required cache functions.
+ */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0))
+
+#define _IX_STR(x) #x
+#define IX_STR(x) _IX_STR(x)
+#define IX_CLM IX_STR(IX_OSAL_CACHE_LINE_SIZE-1)
+
+/*
+ * reimplementation of kernel's invalidate_dcache_range()
+ */
+void
+ixOsalCacheInvalidateRange(unsigned long start, unsigned long size)
+{
+  __asm__
+    ("    tst    %0, #" IX_CLM "\n"
+     "    mcrne  p15, 0, %0, c7, c10, 1      @ clean D cache line\n"
+     "    bic    %0, %0, #" IX_CLM "\n"
+     "    tst    %1, #" IX_CLM "\n"
+     "    mcrne  p15, 0, %1, c7, c10, 1      @ clean D cache line\n"
+     "1:  mcr    p15, 0, %0, c7, c6, 1       @ invalidate D cache line\n"
+     "    add    %0, %0, #" IX_STR(IX_OSAL_CACHE_LINE_SIZE) "\n"
+     "    cmp    %0, %1\n"
+     "    blo    1b\n"
+     "    mcr    p15, 0, %0, c7, c10, 4      @ drain write & fill buffer\n"
+     : /* no output */
+     : "r"(start), "r"(size)
+     : "cc");
+}
+
+/*
+ * reimplementation of kernel's invalidate_dcache_range()
+ */
+void
+ixOsalCacheFlushRange(unsigned long start, unsigned long size)
+{
+  __asm__
+    ("    bic    %0, %0, #" IX_CLM "\n"
+     "1:  mcr    p15, 0, %0, c7, c10, 1      @ clean D cache line\n"
+     "    add    %0, %0, #" IX_STR(IX_OSAL_CACHE_LINE_SIZE) "\n"
+     "    cmp    %0, %1\n"
+     "    blo    1b\n"
+     "    mcr    p15, 0, %0, c7, c10, 4      @ drain write & fill buffer\n"
+     : /* no output */
+     : "r"(start), "r"(size)
+     : "cc");
+}
+
+#undef _IX_STR
+#undef IX_STR
+#undef IX_CLM
+
+#endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)) */
--- ixp_osal/os/linux/src/core/IxOsalOsSymbols.c
+++ ixp_osal/os/linux/src/core/IxOsalOsSymbols.c
@@ -64,6 +64,10 @@ EXPORT_SYMBOL (ixOsalMemSet);
 
 EXPORT_SYMBOL (ixOsalCacheDmaMalloc);
 EXPORT_SYMBOL (ixOsalCacheDmaFree);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0))
+EXPORT_SYMBOL (ixOsalCacheInvalidateRange);
+EXPORT_SYMBOL (ixOsalCacheFlushRange);
+#endif
 
 EXPORT_SYMBOL (ixOsalThreadCreate);
 EXPORT_SYMBOL (ixOsalThreadStart);
